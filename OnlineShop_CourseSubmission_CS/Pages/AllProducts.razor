@page "/allproducts"
@using OnlineShop_CourseSubmission_CS.Components
@using OnlineShop_CourseSubmission_CS.Data
@using OnlineShop_CourseSubmission_CS.Component
@using System.Text.Json;
@using System.Text.Json.Serialization;
@inject DataService DataService

<PageTitle>OnlineShop - All Products</PageTitle>

<h3>Products</h3>
@if (products != null)
{
	foreach (var item in products)
	{	
		<div class="cartItemsList">
			<div class="card" >
				<a href="/product/@item.Id" >
					<div class="added-card">
						<img src=@item.Image class="card-img-top" alt="products">
					</div>
				</a>
				<div class="card-body overflow-auto" style="height:300px">
					<h5 class="card-title">@item.Title</h5>
					<p class="card-text">@item.Description</p>
				</div>	
				<ul class="list-group list-group-flush">
					<li class="list-group-item">€@item.Price</li>
				</ul>
				<div class="card-body d-flex justify-content-between">
						<a class="btn btn-secondary" href="/product/@item.Id">More <span class= "small-hidden">info</span></a>
						<button class="btn btn-secondary" @onclick="()=>WishItem.addtoWish(item.Id)">WishList </button>
						<button  class="btn btn-secondary" @onclick="()=>ShoppingCart.AddToCart(item.Id)">Add <span class= "small-hidden">to cart</span> </button>	
				</div>
			</div>
		</div>
	}
}



@code {
    private Products[]? products;
    protected override async Task OnInitializedAsync()
    {
        products = await DataService.GetAllProducts();
    }

}