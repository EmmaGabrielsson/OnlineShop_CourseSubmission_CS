@page "/product/{id}"
@using OnlineShop_CourseSubmission_CS.Components;
@using OnlineShop_CourseSubmission_CS.Data
@inject DataService DataService
@using OnlineShop_CourseSubmission_CS.Component;

@if (product!=null){
<div class="container">
	<div class="backtoshop">
		<a class="btn btn-secondary" href="/allproducts">Back to Shop</a>
	</div>
	<h2 class="title-section">@product.Title</h2>
	<div class="detail-container">
		<div class="two-column">
			<img class="detail-image" src="@product.Image" alt="@product.Title" />
		</div>
		<div class="two-column">
			<h3>@product.Title</h3>
			<h5>Category: @product.Category</h5>
			<h5>Rate: @product.Rating.Rate</h5>
			<h5>Viewed by @product.Rating.Count People</h5>
			<hr />
			<h4>@product.Price</h4>
			<div>@product.Description</div>
			<div class="card-body d-flex justify-content-between">
					<button class="btn btn-secondary" @onclick="()=>ShoppingCart.AddToCart(product.Id)">Add <span class="small-hidden">to cart</span> </button>
					<button class="btn btn-secondary" @onclick="()=>WishItem.AddToWish(product.Id)">Add <span class="small-hidden">to cart</span> </button>

			</div>
		</div>
	</div>
	
</div>
}


@code {
	private Products[]? products;

	private Products? product;

	[Parameter]
	public string? id { get; set; }
	protected override async Task OnInitializedAsync()
	{
		products = await DataService.GetAllProducts();
		if (id!=null){
			product = products.FirstOrDefault(p => p.Id == Int32.Parse(id));
		}

	}

	
}